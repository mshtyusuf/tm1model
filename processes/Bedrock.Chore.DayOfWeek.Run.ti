#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

################################################################################################# ####################
##~~Join the bedrock TM1 community on GitHub https://github.com/cubewise-code/bedrock Ver 4.0~~##
################################################################################################# 

#This Process was changed into shell, that will call another process from Bedrock v4.
##Global Variables
StringGlobalVariable('sProcessReturnCode');
NumericGlobalVariable('nProcessReturnCode');
nProcessReturnCode= 0;

### Constants ###
cThisProcName   = GetProcessName();
cUserName       = TM1User();
cMsgErrorContent= 'User:%cUserName% Process:%cThisProcName% ErrorMsg:%sMessage%';
cTimeStamp      = TimSt( Now, '\Y\m\d\h\i\s' );
cRandomInt      = NumberToString( INT( RAND( ) * 1000 ));
cDebugFile      = GetProcessErrorFileDirectory | cThisProcName | '.' | cTimeStamp | '.' | cRandomInt ;
cTempSubset     = cThisProcName | '.' | cRandomInt;
cTempFile       = GetProcessErrorFileDirectory | cTempSubset | '.csv';

#transformation of numeric parameters into one string parameter, for v4 format:

If (pSunday = 1);
  sSunday = 'SUN ';
  nFirst = 1;
ElseIf (pSunday = 0);
  sSunday = '';
  nFirst = 0;
Endif;

If (pMonday = 1);
  If (nFirst = 0);
  sMonday = 'MON ';
  nFirst = 1;
  ElseIf (nFirst = 1);
  sMonday = '& MON ';  
  EndIf;
ElseIf (pMonday = 0);
  sMonday = '';
Endif;

If (pTuesday = 1);
  If (nFirst = 0);
  sTuesday = 'TUE ';
  nFirst = 1;
  ElseIf (nFirst = 1);
  sMonday = '& TUE ';
  EndIf;
ElseIf (pMonday = 0);
  sMonday = '';
Endif;

If (pWednesday = 1);
  If (nFirst = 0);
  sWednesday = 'WED ';
  nFirst = 1;
  ElseIf (nFirst = 1);
  sWednesday = '& WED ';
  EndIf;
ElseIf (pWednesday = 0);
  sWednesday = '';
Endif;

If (pThursday = 1);
  If (nFirst = 0);
  sThursday = 'THU ';
  nFirst = 1;
  ElseIf (nFirst = 1);
  sWednesday = '& THU ';
  EndIf;
ElseIf (pThursday = 0);
  sThursday = '';
Endif;

If (pFriday = 1);
  If (nFirst = 0);
  sFriday = 'FRI ';
  nFirst = 1;
  ElseIf (nFirst = 1);
  sFriday = '& FRI '; 
  EndIf;
ElseIf (pFriday = 0);
  sFriday = '';
Endif;

If (pSaturday = 1);
  If (nFirst = 0);
  sSaturday = 'SAT ';
  nFirst = 1;
  ElseIf (nFirst = 1);
  sSaturday = '& SAT ';
  EndIf;
ElseIf (pSaturday = 0);
  sSaturday = '';
Endif;

#Combine all days into one string
SweekDays = sSunday | sMonday | sTuesday | sWednesday | sThursday | sFriday | sSaturday ;

### Initialise Debug ###

If( pDebug >= 1 );

  # Set debug file name
  sDebugFile = cDebugFile | 'Prolog.debug';

  # Log start time
  AsciiOutput( sDebugFile, 'Process Started: ' | TimSt( Now, '\d-\m-\Y \h:\i:\s' ) );

  # Log parameters
  AsciiOutput( sDebugFile, 'Parameters: pSunday          : ' | NumberToString( pSunday ) );
  AsciiOutput( sDebugFile, '            pMonday          : ' | NumberToString( pMonday ) );
  AsciiOutput( sDebugFile, '            pTuesday         : ' | NumberToString( pTuesday  ) );
  AsciiOutput( sDebugFile, '            pWednesday       : ' | NumberToString( pWednesday ) );
  AsciiOutput( sDebugFile, '            pThursday        : ' | NumberToString( pThursday ) );
  AsciiOutput( sDebugFile, '            pFriday          : ' | NumberToString( pFriday ) );
  AsciiOutput( sDebugFile, '            pSaturday        : ' | NumberToString( pSaturday ) );
  AsciiOutput( sDebugFile, '            sWeekDays        : ' | sWeekDays );
  AsciiOutput( sDebugFile, '            pDebug           : ' | NumberToString( pDebug ) );


EndIf;

#Call v4 TI
EXECUTEPROCESS('}bedrock.chore.execution.check',
  'pLogOutput', pDebug,
  'pMonthDays', '',
  'pWeekDays', sWeekDays,
  'pDelim', '&',
  'pStartTime', '',
  'pEndTime', ''
  );

If(nProcessReturnCode = ProcessExitByChoreQuit() );
    ChoreQuit;
Endif;
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion